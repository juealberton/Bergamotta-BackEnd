// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String   @unique
  password   String
  image_link String?
  city       String
  state      String
  country    String
  rating     Rating[]
}

model Rating {
  id                      String   @id @default(auto()) @map("_id") @db.ObjectId
  welcoming_service       Boolean?
  ingredient_substitution Boolean?
  instagrammable_food     Boolean?
  tasty_food              Boolean?
  cozy                    Boolean?
  service_speed           Boolean?
  comment                 String?
  user                    User     @relation(fields: [user_id], references: [id])
  user_id                 String   @db.ObjectId
  place                   Place    @relation(fields: [place_id], references: [id])
  place_id                String   @db.ObjectId
}

model Owner {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String  @unique
  password   String
  image_link String?
  city       String
  state      String
  country    String
  place      Place[]
}

model Place {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  owner                Owner             @relation(fields: [owner_id], references: [id])
  owner_id             String            @db.ObjectId
  name                 String
  places_types         Places_Types[]
  place_type_number    Int[]
  foods_types          Foods_Types[]
  food_type_number     Int[]
  places_profiles      Places_Profiles[]
  place_profile_number Int[]
  city                 String
  state                String
  country              String
  zipcode              String
  district             String
  street               String
  place_number         String
  complement           String?
  image_link           String
  capacity             Int
  description          String
  phone                String
  payment              String
  latitude             String?
  longitude            String?
  rating               Rating[]
}

model Places_Types {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  place_type        Place_Type @relation(fields: [place_type_number], references: [number])
  place_type_number Int
  place             Place      @relation(fields: [place_id], references: [id])
  place_id          String     @db.ObjectId
}

model Place_Type {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  number      Int            @unique
  type        String
  places_types Places_Types[]
}

model Foods_Types {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  food_type        Food_Type @relation(fields: [food_type_number], references: [number])
  food_type_number Int
  place            Place     @relation(fields: [place_id], references: [id])
  place_id         String    @db.ObjectId
}

model Food_Type {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  number      Int         @unique
  type        String
  foods_types Foods_Types[]
}

model Places_Profiles {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  place_profile        Place_Profile @relation(fields: [place_profile_number], references: [number])
  place_profile_number Int
  place            Place     @relation(fields: [place_id], references: [id])
  place_id         String    @db.ObjectId
}

model Place_Profile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  number   Int    @unique
  profile  String
  places_profile Places_Profiles[]
}

model Recipe {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  ingredients String
  directions  String
  servings    Int
  total_time  String
}
